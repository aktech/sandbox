name: Build macOS Image with Lume

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      macos_version:
        description: 'macOS version to build (latest, 14.0, etc.)'
        required: true
        default: 'latest'
      cpu_count:
        description: 'Number of CPU cores'
        required: true
        default: '4'
      memory:
        description: 'Memory size'
        required: true
        default: '4GB'
      disk_size:
        description: 'Disk size'
        required: true
        default: '40GB'
      vm_name:
        description: 'VM name'
        required: true
        default: 'macos-builder'

jobs:
  build:
    name: Build macOS Image
    runs-on: macos-14 # Ensures we're using a macOS runner with Apple Silicon
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      - name: Install Packer
        run: |
          brew tap hashicorp/tap
          brew install hashicorp/tap/packer
          packer --version
      
      - name: Install Lume
        run: |
          brew install lume
      
      - name: Clone packer-plugin-lume repository
        run: |
          git clone https://github.com/trycua/packer-plugin-lume.git
          cd packer-plugin-lume
          echo "PLUGIN_DIR=$(pwd)" >> $GITHUB_ENV
      
      - name: Build and install packer-plugin-lume
        working-directory: ${{ env.PLUGIN_DIR }}
        run: |
          # Build and install the plugin properly
          go build -o packer-plugin-lume
          
          # Install the plugin using Packer's plugin installation command
          packer plugins install --path . "github.com/trycua/lume"
          
          # Verify the plugin was installed
          packer plugins list
      
      - name: Get IPSW URL
        id: ipsw
        run: |
          if [ "${{ github.event.inputs.macos_version }}" = "latest" ]; then
            IPSW_URL=$(lume ipsw | grep -o 'https://.*ipsw')
          else
            IPSW_URL=$(lume ipsw | grep "${{ github.event.inputs.macos_version }}" | grep -o 'https://.*ipsw')
          fi
          echo "::set-output name=url::$IPSW_URL"
          echo "IPSW_URL=$IPSW_URL" >> $GITHUB_ENV
      
      - name: Download IPSW
        run: |
          echo "Downloading IPSW from $IPSW_URL"
          curl -o macOS.ipsw "$IPSW_URL"
          echo "IPSW_PATH=$(pwd)/macOS.ipsw" >> $GITHUB_ENV
      
      - name: Create Variables File
        run: |
          # Copy sample variables file from the plugin repository if it exists
          if [ -f "packer-plugin-lume/bin/variables.hcl" ]; then
            cp packer-plugin-lume/bin/variables.hcl ./variables.hcl
            # Update the variables with our custom values
            sed -i '' "s/^vm_name.*/vm_name     = \"${{ github.event.inputs.vm_name }}\"/g" variables.hcl
            sed -i '' "s/^cpu_count.*/cpu_count   = ${{ github.event.inputs.cpu_count }}/g" variables.hcl
            sed -i '' "s/^memory.*/memory      = \"${{ github.event.inputs.memory }}\"/g" variables.hcl
            sed -i '' "s/^disk_size.*/disk_size   = \"${{ github.event.inputs.disk_size }}\"/g" variables.hcl
            sed -i '' "s|^ipsw.*|ipsw        = \"$IPSW_PATH\"|g" variables.hcl
          else
            # Create variables file from scratch if sample doesn't exist
            cat > variables.hcl << EOF
            vm_name     = "${{ github.event.inputs.vm_name }}"
            cpu_count   = ${{ github.event.inputs.cpu_count }}
            memory      = "${{ github.event.inputs.memory }}"
            disk_size   = "${{ github.event.inputs.disk_size }}"
            ipsw        = "$IPSW_PATH"
            ssh_username = "admin"
            ssh_password = "admin"
            EOF
          fi
      
      - name: Setup Packer Template
        run: |
          # Use the existing template from the repository if it exists
          if [ -f "packer-plugin-lume/bin/macOS-15.arm64.lume.prepare-01.pkr.hcl" ]; then
            cp packer-plugin-lume/bin/macOS-15.arm64.lume.prepare-01.pkr.hcl ./macos-build.pkr.hcl
          else
            # Create a basic template if no sample exists
            cat > macos-build.pkr.hcl << EOF
            packer {
              required_plugins {
                lume = {
                  version = ">= 0.1.0"
                  source = "github.com/trycua/lume"
                }
              }
            }
            
            source "lume" "macos" {
              vm_name       = var.vm_name
              cpu_count     = var.cpu_count
              memory        = var.memory
              disk_size     = var.disk_size
              ipsw          = var.ipsw
              headless      = true
              ssh_username  = var.ssh_username
              ssh_password  = var.ssh_password
              ssh_timeout   = "30m"
            }
            
            build {
              sources = ["source.lume.macos"]
              
              provisioner "shell" {
                inline = [
                  "echo 'macOS build started'",
                  "sw_vers",
                  "echo 'Setting up system...'",
                  "sudo softwareupdate --install-rosetta --agree-to-license",
                  "echo 'System setup complete'"
                ]
              }
            }
            EOF
          fi
      
      - name: Initialize Packer
        run: |
          packer init macos-build.pkr.hcl
      
      - name: Build macOS Image
        run: |
          export PACKER_PLUGIN_PATH="${HOME}/.packer.d/plugins/"
          packer build -var-file=variables.hcl macos-build.pkr.hcl
      - name: Debugging with tmate
        if: failure()
        uses: mxschmitt/action-tmate@v3.19      
      # - name: Export VM
      #   run: |
      #     lume export ${{ github.event.inputs.vm_name }} --output=${{ github.event.inputs.vm_name }}.tar.gz
